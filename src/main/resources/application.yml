spring:
  # RabbitMQ
  rabbitmq:
    #服务器
    host: 192.168.152.128
    username: guest
    password: guest
    virtual-host: /
    port: 5672
    listener:
      simple:
        #消费者最小数量
        concurrency: 10
        max-concurrency: 10
        #限制消费者每次只能处理一条消息，处理完才能继续下一条
        prefetch: 1
        #启动时是否默认启动容器，默认ture
        auto-startup: true
        #被拒绝时重新进入队列
        default-requeue-rejected: true
    template:
      retry:
        #发布重试，默认false
        enabled: true
        #重试时间，默认1000ms
        initial-interval: 1000ms
        #重试最大次数，默认3次
        max-attempts: 3
        #重试最大间隔时间，默认10000ms
        max-interval: 10000ms
        #重试的间隔乘数。比如配2.0,第一次就等10秒，第二次就等20秒，第三次就等40秒
        multiplier: 1

  #静态资源处理
  #thymeleaf配置
  thymeleaf:
    cache: false #关闭缓存
  #数据源配置
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/seckill_study?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    #url: jdbc:mysql://127.0.0.1:3306/seckill?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
    hikari: #连接池
      pool-name: DateHikariCP
      minimum-idle: 5 #最小空闲连接出
      idle-timeout: 180000 #空闲连接存活最大时间，默认600000(10分钟)
      maximum-pool-size: 10 #最大连接数
      auto-commit: true #从连接池返回的连接自动提交
      max-lifetime: 1800000
      connection-timeout: 30000 #连接超时时间，默认30000(30分钟)
      connection-test-query: SELECT 1

  redis:
    #host: 150.158.188.149
    host: 192.168.152.128
    #host: 127.0.0.1
    port: 6379
    database: 0
    timeout: 10000ms
    lettuce:
      pool:
        #最大连接数
        max-active: 8
        max-wait: 10000ms
        #最大空闲连接
        max-idle: 200
        min-idle: 5
  web:
    resources:
      add-mappings: true
      cache:
        cachecontrol:
          #缓存相应时间，单位秒
          max-age: 3600
      chain:
        #资源链启动缓存，默认启动
        cache: true
        #启动资源链，默认禁用
        enabled: true
        #启用压缩资源(gzip,brotli)解析，默认禁用
        compressed: true
      static-locations: classpath:/static/

mybatis-plus: #mybatis-plus配置
  mapper-locations: classpath*:/mapper/*Mapper.xml #配置Mapper.xml映射文件
  type-aliases-package: com.xxxx.seckill.pojo #配置MyBatis数据返回类型别名(默认别名为类名)

#MyBatis SQL打印(方法接口所在的包，不是Mapper.xml所在的包)
logging:
  level:
    com.xxxx.seckill.mapper: debug

